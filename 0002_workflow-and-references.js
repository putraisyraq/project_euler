var fibo = [1,2];
var fibo_last = fibo[fibo.length - 1];
var fibo_2last = fibo[fibo.length - 2];
var start = 0;

for (var i = 2; i <= 300; i++) {
	fibo[i]=fibo[i-2]+fibo[i-1];
}

console.log(fibo);



//Question
	Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
	By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
	find the sum of the even-valued terms.

//How to access last element in an array
	var my_array = /* some array here */;
	var last_element = my_array[my_array.length - 1];

//DuckDuckGo Fibonacchi Sequence --- Easy to follow
	var i;
	var fib = []; // Initialize array!

	fib[0] = 0;
	fib[1] = 1;
	for(i=2; i<=10; i++)
	{
	    // Next fibonacci number = previous + one before previous
	    // Translated to JavaScript:
	    fib[i] = fib[i-2] + fib[i-1];
	    console.log(fib[i]);
	}


while(foo)	
{
    if(baz)
    {
        // Do something
    }
    else
    {
        // exit condition met
        break;
    }
}